/*
   This file is generated by the code generator.
   DO NOT EDIT.
*/

package cli

// TopLevelFlagsUsageMap returns a map of the top-level flags and their respective descriptions.
func TopLevelFlagsUsageMap() map[string]string {
	return map[string]string{
		flagConfig:  "the path to your configuration file",
		flagNoColor: "disable the ANSI colour output when displaying the text on screen",
	}
}

// FlagUsageMap returns a map of the flags and their respective descriptions.
func FlagUsageMap() map[string]string {
	return map[string]string{
		flagAccountName:               "the name of the account to {action}",
		flagAddPoll:                   "add a poll to the new status",
		flagAllAudio:                  "play all audio files from the status",
		flagAllImages:                 "show all image files from the status",
		flagAllVideos:                 "play all video files from the status",
		flagAttachmentId:              "the ID of the media attachment",
		flagBrowser:                   "{action} the {target} in your favourite browser",
		flagContent:                   "the content of the {target}",
		flagContentType:               "the type that the contents should be parsed from",
		flagDuration:                  "how long the effect should last for (set to 0s to last indefinitely)",
		flagExcludeNotificationType:   "the type of notifications to exclude from the list",
		flagExcludeReblogs:            "exclude statuses that are reblogs (boosts) of other statuses",
		flagExcludeReplies:            "exclude statuses that are replies to other statuses",
		flagExclusive:                 "hide posts from members of this list from your home timeline",
		flagFilterAction:              "the action to take when a status matches this filter",
		flagFilterContext:             "the context in which the filter should be applied",
		flagFilterExpiresIn:           "the time from when the filter is created that it should expire",
		flagFilterId:                  "the ID of the filter",
		flagFilterKeywordId:           "the ID of the filter-keyword",
		flagFilterStatusId:            "the ID of the filter-status",
		flagFull:                      "print the application's full build information",
		flagInReplyTo:                 "the ID of the status that you want to reply to",
		flagIncludeNotificationType:   "the type of notifications to include in the list",
		flagKeyword:                   "the text to be filtered",
		flagLanguage:                  "the ISO 639 language code for this {target}",
		flagLimit:                     "the maximum number of items to display",
		flagListId:                    "the ID of the list",
		flagLocalOnly:                 "do not federate the status beyond the local timeline(s)",
		flagMaxStatuses:               "the maximum number of statuses to display",
		flagMediaDescription:          "the description of the media attachment",
		flagMediaFile:                 "the path to the file of the media-attachment",
		flagMediaFocus:                "the focus of the media-attachment",
		flagMuteNotifications:         "mute notifications as well as posts from the {target}",
		flagMyAccount:                 "specify your account to {action}",
		flagName:                      "the name of the {target} you want to {action}",
		flagNewName:                   "the new {target} name",
		flagNotBoostable:              "viewers will not be allowed to reblog (boost) the created status",
		flagNotLikeable:               "viewers will not be allowed to like (favourite) the created status",
		flagNotReplyable:              "viewers will not be allowed to reply to the created status",
		flagNotificationId:            "the ID of the notification to {action}",
		flagNotify:                    "get notifications whenever the account you want to follow posts a status",
		flagOldName:                   "the old {target} name",
		flagOnlyMedia:                 "only show the statuses with media attachments",
		flagOnlyPinned:                "only show the account's pinned statuses",
		flagOnlyPublic:                "only show the account's public posts",
		flagOperation:                 "the name of the operation",
		flagPollAllowsMultipleChoices: "allow viewers to make multiple choices in the poll",
		flagPollExpiresIn:             "the time from when the poll is created that it should expire",
		flagPollHidesVoteCounts:       "hide the vote count until the poll is closed",
		flagPollOption:                "a poll option (use this flag multiple times to set multiple poll options)",
		flagQuery:                     "the search query string",
		flagRepliesPolicy:             "the replies policy of the {target} to {action}",
		flagResolve:                   "allow your instance to resolve the search by making calls to remote instances",
		flagRestrictToFollowing:       "restrict the search to accounts that you are following",
		flagSaveText:                  "save the text of the deleted {target}",
		flagScope:                     "the scope of access to your GoToSocial instance (e.g. read)",
		flagSensitive:                 "mark the {target} as sensitive",
		flagShowReblogs:               "show reblogs (boosts) from the account you want to follow",
		flagShowStatuses:              "view the statuses from the {target} that you are viewing",
		flagShowWhoFavourited:         "show the accounts who favourited (liked) the {target}",
		flagShowWhoReblogged:          "show the accounts who reblogged (boosted) the {target}",
		flagSkipAccountRelationship:   "don't show your relationship to the account that you are viewing",
		flagSkipUserPreferences:       "don't show your posting preferences when viewing your account information",
		flagStatusId:                  "the ID of the status",
		flagSummary:                   "the summary of the status (a.k.a the subject, spoiler text or content warning)",
		flagTagName:                   "the name of the (hash)tag",
		flagTarget:                    "the name of the target to {action}",
		flagTimelineCategory:          "the category of the timeline to {action}",
		flagTitle:                     "the title of the {target} to {action}",
		flagTokenId:                   "the ID of the token to {action}",
		flagUrl:                       "the URL of your GoToSocial instance",
		flagVisibility:                "The visibility of the {target}",
		flagVote:                      "the option in the poll to vote for",
		flagWholeWord:                 "the filter should consider word boundaries",
		flagWithoutIdleTimeout:        "{action} the {target} without an idle timeout",
	}
}

// TargetDesc returns the target's description.
func TargetDesc(target string) (string, bool) {
	desc, ok := targetDescMap()[target]

	return desc, ok
}

// TargetDescMap returns a map of the targets and their descriptions.
func TargetDescMap() map[string]string {
	return targetDescMap()
}

func targetDescMap() map[string]string {
	return map[string]string{
		TargetAccess:          "your access to your GoToSocial instance",
		TargetAccount:         "a local or remote account",
		TargetAccounts:        "one or accounts",
		TargetAlias:           "a custom command mapped to an operation",
		TargetAliases:         "the list of your aliases",
		TargetBlockedAccounts: "the accounts that are blocked by you",
		TargetBookmarks:       "the statuses that you've bookmarked",
		TargetConfig:          "your configuration",
		TargetFavourites:      "the statuses that you've favourited (liked)",
		TargetFilter:          "a single filter",
		TargetFilterKeyword:   "the text to filter within a filter",
		TargetFilterStatus:    "the status to filter within a filter",
		TargetFilters:         "the list of your filters",
		TargetFollowRequest:   "the account that is requesting to follow you",
		TargetFollowRequests:  "the list of accounts that are requesting to follow you",
		TargetFollowers:       "the accounts who are following the specified account",
		TargetFollowings:      "the accounts who the specified account is following",
		TargetInstance:        "the GoToSocial instance",
		TargetList:            "a single list",
		TargetLists:           "one or more lists",
		TargetMedia:           "the media attached to the specified status",
		TargetMediaAttachment: "a media attachment that you own",
		TargetMutedAccounts:   "the accounts that are muted by you",
		TargetNote:            "your private note about an account",
		TargetNotification:    "a single notification",
		TargetNotifications:   "multiple notifications",
		TargetServer:          "the server mode",
		TargetStatus:          "a single status",
		TargetTag:             "a single tag (hashtag)",
		TargetTags:            "multiple tags (hashtags)",
		TargetThread:          "a status thread",
		TargetTimeline:        "your timeline",
		TargetToken:           "details of an application token",
		TargetTokens:          "a list of your tokens",
		TargetUsage:           "the usage documentation",
		TargetVersion:         "the application's build information",
		TargetVotes:           "the votes(s) to the poll in a status",
	}
}

// UsageOperation is a type for the usage documentation containing the name and
// the description of an operation.
type UsageOperation struct {
	Description string
	Flags       []string
}

// GetUsageOperations returns the set of UsageOperations for a given target.
func GetUsageOperations(target string) (map[string]UsageOperation, bool) {
	operations, ok := usageOperationMap()[target]

	return operations, ok
}

// GetUsageOperation returns the UsageOperation for a given operation.
func GetUsageOperation(target, operationName string) (UsageOperation, bool) {
	operation, ok := usageOperationMap()[target][operationName]

	return operation, ok
}

func usageOperationMap() map[string]map[string]UsageOperation {
	return map[string]map[string]UsageOperation{
		TargetAccess: {
			"create access": {
				Description: "creates a new access to your GoToSocial instance",
				Flags: []string{
					flagScope,
					flagUrl,
				},
			},
			"switch access to account": {
				Description: "switches between your logged in accounts",
				Flags: []string{
					flagAccountName,
				},
			},
			"verify access": {
				Description: "verifies that you are authenticated into your GoToSocial instance and prints the name of the account that you are signed into",
				Flags:       []string{},
			},
		},
		TargetAccount: {
			"block account": {
				Description: "blocks a local or remote account",
				Flags: []string{
					flagAccountName,
				},
			},
			"find account": {
				Description: "searches for an account (remotely)",
				Flags: []string{
					flagQuery,
					flagLimit,
					flagRestrictToFollowing,
					flagResolve,
				},
			},
			"follow account": {
				Description: "sends a follow request to the account you want to follow",
				Flags: []string{
					flagAccountName,
					flagNotify,
					flagShowReblogs,
				},
			},
			"mute account": {
				Description: "mutes an account",
				Flags: []string{
					flagAccountName,
					flagDuration,
					flagMuteNotifications,
				},
			},
			"show account": {
				Description: "show a local or remote account",
				Flags: []string{
					flagAccountName,
					flagBrowser,
					flagExcludeReblogs,
					flagExcludeReplies,
					flagMaxStatuses,
					flagMyAccount,
					flagOnlyMedia,
					flagOnlyPinned,
					flagOnlyPublic,
					flagSkipAccountRelationship,
					flagSkipUserPreferences,
					flagShowStatuses,
				},
			},
			"unblock account": {
				Description: "unblocks an account",
				Flags: []string{
					flagAccountName,
				},
			},
			"unfollow account": {
				Description: "unfollows the account that you are curently following",
				Flags: []string{
					flagAccountName,
				},
			},
			"unmute account": {
				Description: "unmutes an account",
				Flags: []string{
					flagAccountName,
				},
			},
		},
		TargetAccounts: {
			"add accounts to list": {
				Description: "adds one or more accounts to a specified list",
				Flags: []string{
					flagListId,
					flagAccountName,
				},
			},
			"remove accounts from list": {
				Description: "removes one or more accounts from a specified list",
				Flags: []string{
					flagListId,
					flagAccountName,
				},
			},
		},
		TargetAlias: {
			"create alias": {
				Description: "creates a new alias",
				Flags: []string{
					flagName,
					flagOperation,
				},
			},
			"delete alias": {
				Description: "deletes an existing alias",
				Flags: []string{
					flagName,
				},
			},
			"edit alias": {
				Description: "edits an existing alias",
				Flags: []string{
					flagName,
					flagOperation,
				},
			},
			"rename alias": {
				Description: "renames an existing alias",
				Flags: []string{
					flagOldName,
					flagNewName,
				},
			},
		},
		TargetAliases: {
			"show aliases": {
				Description: "prints the list of your aliases",
				Flags:       []string{},
			},
		},
		TargetBlockedAccounts: {
			"show blocked-accounts": {
				Description: "prints the list of the accounts that you are currently blocking",
				Flags: []string{
					flagLimit,
				},
			},
		},
		TargetBookmarks: {
			"show bookmarks": {
				Description: "prints the list of the statuses that you have bookmarked",
				Flags: []string{
					flagLimit,
				},
			},
		},
		TargetConfig: {
			"create config": {
				Description: "creates a new configuration file",
				Flags:       []string{},
			},
		},
		TargetFavourites: {
			"show favourites": {
				Description: "prints the list of statuses that you've favourited (liked)",
				Flags: []string{
					flagLimit,
				},
			},
		},
		TargetFilter: {
			"create filter": {
				Description: "creates a new filter",
				Flags: []string{
					flagTitle,
					flagFilterContext,
					flagFilterExpiresIn,
					flagFilterAction,
				},
			},
			"delete filter": {
				Description: "deletes the specified filter",
				Flags: []string{
					flagFilterId,
				},
			},
			"edit filter": {
				Description: "edits the specified filter",
				Flags: []string{
					flagFilterId,
					flagTitle,
					flagFilterContext,
					flagFilterExpiresIn,
					flagFilterAction,
				},
			},
			"show filter": {
				Description: "prints the details of the specified filter",
				Flags: []string{
					flagFilterId,
				},
			},
		},
		TargetFilterKeyword: {
			"add filter-keyword to filter": {
				Description: "creates and adds a filter keyword to the specified filter",
				Flags: []string{
					flagFilterId,
					flagKeyword,
					flagWholeWord,
				},
			},
			"delete filter-keyword": {
				Description: "deletes an existing filter-keyword",
				Flags: []string{
					flagFilterKeywordId,
				},
			},
			"edit filter-keyword": {
				Description: "edits the specified filter-keyword",
				Flags: []string{
					flagFilterKeywordId,
					flagKeyword,
					flagWholeWord,
				},
			},
			"show filter-keyword": {
				Description: "prints the details of the specified filter-keyword",
				Flags: []string{
					flagFilterKeywordId,
				},
			},
		},
		TargetFilterStatus: {
			"add filter-status to filter": {
				Description: "creates and adds a filter status to the specified filter",
				Flags: []string{
					flagFilterId,
					flagStatusId,
				},
			},
			"delete filter-status": {
				Description: "deletes an existing filter-status",
				Flags: []string{
					flagFilterStatusId,
				},
			},
			"show filter-status": {
				Description: "prints the details of the specified filter-status",
				Flags: []string{
					flagFilterStatusId,
				},
			},
		},
		TargetFilters: {
			"show filters": {
				Description: "prints the list of all your filters",
				Flags:       []string{},
			},
		},
		TargetFollowRequest: {
			"accept follow-request": {
				Description: "accepts the request from the account that is requesting to follow you",
				Flags: []string{
					flagAccountName,
				},
			},
			"reject follow-request": {
				Description: "rejects the request from the account that is requesting to follow you",
				Flags: []string{
					flagAccountName,
				},
			},
		},
		TargetFollowRequests: {
			"show follow-requests": {
				Description: "prints the list of accounts that are requesting to follow you",
				Flags: []string{
					flagLimit,
				},
			},
		},
		TargetFollowers: {
			"show followers from account": {
				Description: "prints the names of the accounts that are following the specified account",
				Flags: []string{
					flagAccountName,
					flagLimit,
					flagMyAccount,
				},
			},
		},
		TargetFollowings: {
			"show followings from account": {
				Description: "prints the names of the accounts that the specified account is following",
				Flags: []string{
					flagAccountName,
					flagLimit,
					flagMyAccount,
				},
			},
		},
		TargetInstance: {
			"show instance": {
				Description: "prints information about the GoToSocial instance that you have logged into",
				Flags:       []string{},
			},
		},
		TargetList: {
			"create list": {
				Description: "creates a new list",
				Flags: []string{
					flagExclusive,
					flagRepliesPolicy,
					flagTitle,
				},
			},
			"delete list": {
				Description: "deletes an existing list",
				Flags: []string{
					flagListId,
				},
			},
			"edit list": {
				Description: "edits the specified list",
				Flags: []string{
					flagListId,
					flagExclusive,
					flagRepliesPolicy,
					flagTitle,
				},
			},
			"show list": {
				Description: "prints the details of the specified list",
				Flags: []string{
					flagListId,
				},
			},
		},
		TargetLists: {
			"show lists": {
				Description: "prints the ID and the title of the lists that you've created",
				Flags:       []string{},
			},
		},
		TargetMedia: {
			"show media from status": {
				Description: "downloads and opens the media attachment(s) from a status",
				Flags: []string{
					flagStatusId,
					flagAttachmentId,
					flagAllAudio,
					flagAllImages,
					flagAllVideos,
				},
			},
		},
		TargetMediaAttachment: {
			"create media-attachment": {
				Description: "uploads media from a file to the instance and creates a media attachment",
				Flags: []string{
					flagMediaDescription,
					flagMediaFile,
					flagMediaFocus,
				},
			},
			"edit media-attachment": {
				Description: "edits the description and/or the focus of the media that you have created",
				Flags: []string{
					flagAttachmentId,
					flagMediaDescription,
					flagMediaFocus,
				},
			},
			"show media-attachment": {
				Description: "prints the details of a given media attachment",
				Flags: []string{
					flagAttachmentId,
				},
			},
		},
		TargetMutedAccounts: {
			"show muted-accounts": {
				Description: "prints the list of accounts that you have muted",
				Flags: []string{
					flagLimit,
				},
			},
		},
		TargetNote: {
			"add note to account": {
				Description: "adds a private note to the specified account",
				Flags: []string{
					flagAccountName,
					flagContent,
				},
			},
			"remove note from account": {
				Description: "removes the private note from the specified account",
				Flags: []string{
					flagAccountName,
				},
			},
		},
		TargetNotification: {
			"show notification": {
				Description: "prints the details of the specified notification",
				Flags: []string{
					flagNotificationId,
				},
			},
		},
		TargetNotifications: {
			"clear notifications": {
				Description: "clears all your notifications",
				Flags:       []string{},
			},
			"show notifications": {
				Description: "prints the list of your notifications",
				Flags: []string{
					flagLimit,
					flagExcludeNotificationType,
					flagIncludeNotificationType,
				},
			},
		},
		TargetServer: {
			"start server": {
				Description: "starts enbas in the server mode",
				Flags: []string{
					flagWithoutIdleTimeout,
				},
			},
		},
		TargetStatus: {
			"add status to bookmarks": {
				Description: "adds the specified status to your bookmarks",
				Flags: []string{
					flagStatusId,
				},
			},
			"create status": {
				Description: "creates a new status",
				Flags: []string{
					flagAddPoll,
					flagAttachmentId,
					flagContent,
					flagContentType,
					flagInReplyTo,
					flagLanguage,
					flagLocalOnly,
					flagMediaDescription,
					flagMediaFile,
					flagMediaFocus,
					flagNotBoostable,
					flagNotLikeable,
					flagNotReplyable,
					flagPollAllowsMultipleChoices,
					flagPollExpiresIn,
					flagPollHidesVoteCounts,
					flagPollOption,
					flagSensitive,
					flagSummary,
					flagVisibility,
				},
			},
			"delete status": {
				Description: "deletes a status that belongs to you",
				Flags: []string{
					flagStatusId,
					flagSaveText,
				},
			},
			"favourite status": {
				Description: "favourites (likes) the specified status",
				Flags: []string{
					flagStatusId,
				},
			},
			"find status": {
				Description: "searches for a status (remotely)",
				Flags: []string{
					flagQuery,
					flagLimit,
					flagAccountName,
					flagResolve,
				},
			},
			"mute status": {
				Description: "mutes the specified status to stop you from receiving future notifications for replies, favourites (likes), reblogs (boosts), etc from the status' thread",
				Flags: []string{
					flagStatusId,
				},
			},
			"reblog status": {
				Description: "reblogs (boosts) the specified status",
				Flags: []string{
					flagStatusId,
				},
			},
			"remove status from bookmarks": {
				Description: "removes the specified status from your bookmarks",
				Flags: []string{
					flagStatusId,
				},
			},
			"show status": {
				Description: "prints the details of the specified status",
				Flags: []string{
					flagStatusId,
					flagBrowser,
					flagShowWhoFavourited,
					flagShowWhoReblogged,
				},
			},
			"unfavourite status": {
				Description: "unfavourites (unlikes) the status that you've previously favourited",
				Flags: []string{
					flagStatusId,
				},
			},
			"unmute status": {
				Description: "unmutes the specified status so that you can start receiving future notifications for replies, favourites (likes), reblogs (boosts), etc from the status' thread",
				Flags: []string{
					flagStatusId,
				},
			},
			"unreblog status": {
				Description: "unreblogs (unboosts) the specified status",
				Flags: []string{
					flagStatusId,
				},
			},
		},
		TargetTag: {
			"find tag": {
				Description: "searches for a tag",
				Flags: []string{
					flagQuery,
					flagLimit,
				},
			},
			"follow tag": {
				Description: "follows the specified tag",
				Flags: []string{
					flagTagName,
				},
			},
			"show tag": {
				Description: "prints details of the specified tag",
				Flags: []string{
					flagTagName,
				},
			},
			"unfollow tag": {
				Description: "unfollows the tag that you are currently following",
				Flags: []string{
					flagTagName,
				},
			},
		},
		TargetTags: {
			"show tags": {
				Description: "prints the list of the tags that you are following",
				Flags: []string{
					flagLimit,
				},
			},
		},
		TargetThread: {
			"show thread from status": {
				Description: "prints the context around the specified status",
				Flags: []string{
					flagStatusId,
				},
			},
		},
		TargetTimeline: {
			"show timeline": {
				Description: "prints the list of statuses from a timeline",
				Flags: []string{
					flagLimit,
					flagListId,
					flagTagName,
					flagTimelineCategory,
				},
			},
		},
		TargetToken: {
			"invalidate token": {
				Description: "invalidates the specified token which will remove it from your instance's database",
				Flags: []string{
					flagTokenId,
				},
			},
			"show token": {
				Description: "prints the details of the specified token",
				Flags: []string{
					flagTokenId,
				},
			},
		},
		TargetTokens: {
			"show tokens": {
				Description: "prints the list of the tokens that you have created",
				Flags: []string{
					flagLimit,
				},
			},
		},
		TargetUsage: {
			"show usage": {
				Description: "prints the usage documentation for a given action and/or target",
				Flags: []string{
					flagTarget,
					flagOperation,
				},
			},
		},
		TargetVersion: {
			"show version": {
				Description: "prints the application's build information",
				Flags: []string{
					flagFull,
				},
			},
		},
		TargetVotes: {
			"add votes to status": {
				Description: "adds your vote(s) to the poll in the specified status",
				Flags: []string{
					flagStatusId,
					flagVote,
				},
			},
		},
	}
}
