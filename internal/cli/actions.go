/*
   This file is generated by the code generator.
   DO NOT EDIT.
*/

package cli

const (
	ActionAccept      string = "accept"
	ActionAdd         string = "add"
	ActionBlock       string = "block"
	ActionClear       string = "clear"
	ActionCreate      string = "create"
	ActionDelete      string = "delete"
	ActionEdit        string = "edit"
	ActionFavourite   string = "favourite"
	ActionFind        string = "find"
	ActionFollow      string = "follow"
	ActionInvalidate  string = "invalidate"
	ActionMute        string = "mute"
	ActionReblog      string = "reblog"
	ActionReject      string = "reject"
	ActionRemove      string = "remove"
	ActionRename      string = "rename"
	ActionShow        string = "show"
	ActionStart       string = "start"
	ActionSwitch      string = "switch"
	ActionUnblock     string = "unblock"
	ActionUnfavourite string = "unfavourite"
	ActionUnfollow    string = "unfollow"
	ActionUnmute      string = "unmute"
	ActionUnreblog    string = "unreblog"
	ActionVerify      string = "verify"
)

// ActionDesc returns the action's description.
func ActionDesc(action string) (string, bool) {
	desc, ok := actionDescMap()[action]

	return desc, ok
}

// actionDescMap returns a map of the actions and their
// respective descriptions.
func actionDescMap() map[string]string {
	return map[string]string{
		ActionAccept:      "accepts an existing {target}",
		ActionAdd:         "adds the {target} to an existing {relatedTarget}",
		ActionBlock:       "blocks an existing {target}",
		ActionClear:       "deletes all your {target}",
		ActionCreate:      "creates a new {target}",
		ActionDelete:      "deletes an existing {target}",
		ActionEdit:        "edits an existing {target}",
		ActionFavourite:   "marks the {target} as a favourite {target}",
		ActionFind:        "searches for {target}",
		ActionFollow:      "follows an existing {target}",
		ActionInvalidate:  "invalidates an existing {target}",
		ActionMute:        "mutes an existing {target}",
		ActionReblog:      "reblogs an existing {target}",
		ActionReject:      "rejects an existing {target}",
		ActionRemove:      "removes the {target} from an existing {relatedTarget}",
		ActionRename:      "renames an existing {target}",
		ActionShow:        "prints the details of the {target} to screen",
		ActionStart:       "starts the {target}",
		ActionSwitch:      "switches from one {target} to another",
		ActionUnblock:     "unblocks the {target} you've previously blocked",
		ActionUnfavourite: "unmarks the {target} as a favourite {target}",
		ActionUnfollow:    "unfollows the {target} that you are following",
		ActionUnmute:      "unmutes the {target} that you've muted",
		ActionUnreblog:    "unreblogs the {target} that you've previously reblogged",
		ActionVerify:      "verifies the {target}",
	}
}

// ActionTargets returns a list of targets associated
// with the action.
func ActionTargets(action string) []string {
	return actionTargetsMap()[action]
}

// actionTargetsMap returns a map of the actions and the lists
// of all targets associated to those actions.
func actionTargetsMap() map[string][]string {
	return map[string][]string{
		ActionAccept: {
			TargetFollowRequest,
		},
		ActionAdd: {
			TargetAccounts,
			TargetNote,
			TargetStatus,
			TargetVotes,
		},
		ActionBlock: {
			TargetAccount,
		},
		ActionClear: {
			TargetNotifications,
		},
		ActionCreate: {
			TargetAccess,
			TargetAlias,
			TargetConfig,
			TargetList,
			TargetMediaAttachment,
			TargetStatus,
		},
		ActionDelete: {
			TargetAlias,
			TargetList,
			TargetStatus,
		},
		ActionEdit: {
			TargetAlias,
			TargetList,
			TargetMediaAttachment,
		},
		ActionFavourite: {
			TargetStatus,
		},
		ActionFind: {
			TargetAccount,
			TargetStatus,
			TargetTag,
		},
		ActionFollow: {
			TargetAccount,
			TargetTag,
		},
		ActionInvalidate: {
			TargetToken,
		},
		ActionMute: {
			TargetAccount,
			TargetStatus,
		},
		ActionReblog: {
			TargetStatus,
		},
		ActionReject: {
			TargetFollowRequest,
		},
		ActionRemove: {
			TargetAccounts,
			TargetNote,
			TargetStatus,
		},
		ActionRename: {
			TargetAlias,
		},
		ActionShow: {
			TargetAccount,
			TargetAliases,
			TargetBlockedAccounts,
			TargetBookmarks,
			TargetFavourites,
			TargetFollowRequests,
			TargetFollowers,
			TargetFollowings,
			TargetInstance,
			TargetList,
			TargetLists,
			TargetMedia,
			TargetMediaAttachment,
			TargetMutedAccounts,
			TargetNotification,
			TargetNotifications,
			TargetStatus,
			TargetTag,
			TargetTags,
			TargetThread,
			TargetTimeline,
			TargetToken,
			TargetTokens,
			TargetUsage,
			TargetVersion,
		},
		ActionStart: {
			TargetServer,
		},
		ActionSwitch: {
			TargetAccess,
		},
		ActionUnblock: {
			TargetAccount,
		},
		ActionUnfavourite: {
			TargetStatus,
		},
		ActionUnfollow: {
			TargetAccount,
			TargetTag,
		},
		ActionUnmute: {
			TargetAccount,
			TargetStatus,
		},
		ActionUnreblog: {
			TargetStatus,
		},
		ActionVerify: {
			TargetAccess,
		},
	}
}
